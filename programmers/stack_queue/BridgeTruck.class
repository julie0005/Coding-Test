import java.util.LinkedList;
import java.util.Queue;
import java.util.Stack;

//프로그래머스 다리를 지나는 트럭
class BridgeTruck {
    public int solution(int bridge_length, int weight, int[] truck_weights) {
        int ticks=0;
        int curWeightSum=0;
        int done=0;
        Queue<Integer> bridge=new LinkedList<Integer>();
        Queue<Integer> waitingTrucks=new LinkedList<Integer>();
        
        for(int i=0; i<truck_weights.length; i++){
            waitingTrucks.add(truck_weights[i]);
        }
        
        for(int i=0; i<bridge_length; i++){
            bridge.add(0);
        }
        
        while(done!=truck_weights.length){
            int bridgeTop=bridge.poll();
            curWeightSum-=bridgeTop;
            if(bridgeTop!=0) done++;
            if(!waitingTrucks.isEmpty() && curWeightSum+waitingTrucks.peek()<=weight) {
                int waitTop=waitingTrucks.poll();
                bridge.add(waitTop);
                curWeightSum+=waitTop;
            }
            else bridge.add(0);
            ticks++;
        }
        return ticks;
    }
}